
include required("./default.conf")

train{
    dataset_class = datasets.real_dataset.FaceDataset
    learning_rate = 1.0e-3
    learning_rate_bg = 1.0e-3
    learning_rate_cam = 1.0e-4
    max_batch = 1
    sched_milestones = [30000, 60000] # decay learning rate in these epochs
    sched_factor = 0.5
    GT_lbs_milestones = [15000, 30000, 45000, 60000] # decay flame regularization in these epcohs
    GT_lbs_factor = 0.5
    optimize_expression=True # optimize flame expressions
    optimize_camera=True # optimize camera and flame poses, this is important for alignment and numerical results...
    optimize_ldmk=True # optimize landmarks
    log_train_img_every=2500
    train_iter = 70000
    train_texture_only_clip = True
}
loss{
    mask_weight = 0.0
    head_mask_weight = 1.0
    head_mask_loss_util = 50000
    bg_layer_mask_loss_weight = 0.0
    layer_alpha_weight = 0.25
    lbs_weight = 10.0
    vgg_feature_weight = 0.1
    vgg_detach_bg_weight = 0.0
    vgg_detach_coarse_layer_weight = 0.0
    rgb_l2_weight = 1.0
    rgb_l1_weight = 0.0
    rgb_dssim_weight = 0.1
    vgg_loss_warm_up = 10000
    anchor_deform_loss_weight = 1.0
    anchor_scale_loss_weight = 0.0
    anchor_opacity_loss_weight = 0.15
    anchor_opacity_loss_util = 50000
    fine_rgb_reg_loss_weight = 0.0

    texture_neural_uv_delta_loss_weight = 0.025
    texture_neural_uv_delta_loss_until = 50000
}
test{
    # args for test optimization
    opt_iter = 50 # number of iterations for test time optimization of inputs
    learning_rate_cam_test = 1.5e-3
    learning_rate_layer_offset = 2.5e-3
    optimize_layer_offset=True # optimize an additional offset for bg layer, only used in test time optimization
    wandb_debug_log=True
    optimize_warp_net=False 
    optimize_warp_net_lr = 1.0e-4

    # simulate_fast_anchor = True
    loss{
        rgb_l2_weight = 1.0
        rgb_l1_weight = 0.0
        anchor_deform_loss_weight = 0.0
    }
}
dataset{
    use_background = False
    json_name = flame_params_reenact.json
    train{
        subsample = 1
        # ldmk_drawing_downscale = 4
        load_images = True
    }
    test{
        subsample = 200
        # ldmk_drawing_downscale = 4
        load_images = True
    }
}

model{
    point_cloud
    {
        n_init_points=10000
        max_points=409600 # max number of points for the canonical model, reduce this if memory is limited.
        radius_factor = 0.75
    }
    deformer_network
    {
        d_in = 3
        dims = [128, 128, 128, 128]
        weight_norm = True
        multires = 0
	    num_exp = 50
	    ghostbone = True
	    deform_c = False
    }
    gs_img_model{
        enabled = True
        forward_anchor = True
        hide_anchor_from_iter = 50000
        hide_anchor_allow_gs_opacity_update = True
        hide_anchor_allow_gs_color_update = True
        prune_outside_anchor_every_iter = 10000
        args{
            feature_img_args{
                padding = 50
            }
            # reg_fine_color_ratio = 0.01
            deform_2d_warm_up_iter = 4000
            anchor_init_iter = 4000
            update_base_warping = False
            n_anchor = 32
            anchor_uniform_scale = False
            fine_rgb_after_iter = 15000
            remove_head_anchor = True
            anchor_opacity_min = 0.05
            feature_dim = 32
        }
    }
}

gs_opt{
    densify_grad_threshold = 0.0008
    densify_grad_threshold_vgg_warmup = 0.00025
    densify_until_iter = 25000
}
